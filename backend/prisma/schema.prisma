// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @unique @default(uuid())
  email          String        @unique
  password       String
  dateCreated    DateTime      @default(now())
  dateUpdated    DateTime      @updatedAt
  Profile        Profile?
  sentMessages   Message[]     @relation("sentMessages")
  friends        Friends[]     @relation("requestingUser")
  friendsOf      Friends[]     @relation("acceptingUser")
  conversation   Conversation? @relation(fields: [conversationId], references: [id])
  conversationId String?
}

model Friends {
  id               String  @id @default(uuid())
  requestingUser   User    @relation("requestingUser", fields: [requestingUserId], references: [id])
  requestingUserId String
  acceptingUser    User    @relation("acceptingUser", fields: [acceptingUserId], references: [id])
  acceptingUserId  String
  accepted         Boolean @default(false)
}

model Profile {
  id        Int     @id @default(autoincrement())
  bio       String?
  firstName String?
  lastName  String?
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @unique
}

model Message {
  id             String        @id @default(uuid())
  author         User          @relation("sentMessages", fields: [authorId], references: [id])
  authorId       String
  content        String
  dateSent       DateTime      @default(now())
  conversation   Conversation? @relation(fields: [conversationId], references: [id])
  conversationId String?
}

model Conversation {
  id          String           @id @default(uuid())
  members     User[]
  messages    Message[]
  dateUpdated DateTime         @updatedAt
  type        ConversationType
}

enum ConversationType {
  PRIVATE
  GROUP
}
