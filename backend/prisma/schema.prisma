// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String         @id @default(uuid())
  email                  String         @unique
  password               String
  dateCreated            DateTime       @default(now())
  dateUpdated            DateTime       @updatedAt
  sentMessages           Message[]
  conversations          Conversation[]
  profile                Profile?
  sentFriendRequests     Friendship[]   @relation("Sent Request")
  receivedFriendRequests Friendship[]   @relation("Received Request")
}

model Friendship {
  id               String   @id @default(uuid())
  accepted         Boolean  @default(false)
  requestingUser   User     @relation("Sent Request", fields: [requestingUserId], references: [id])
  requestingUserId String
  acceptingUser    User     @relation("Received Request", fields: [acceptingUserrId], references: [id])
  acceptingUserrId String
  dateSent         DateTime @default(now())
  dateAccepted     DateTime @updatedAt
}

model Profile {
  id        String  @id @default(uuid())
  bio       String?
  firstName String
  lastName  String
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @unique
}

model Message {
  id             String       @id @default(uuid())
  content        String
  dateSent       DateTime     @default(now())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  author         User         @relation(fields: [authorId], references: [id])
  authorId       String
}

model Conversation {
  id          String           @id @default(uuid())
  messages    Message[]
  dateUpdated DateTime         @updatedAt
  type        ConversationType
  members     User[]
}

enum ConversationType {
  PRIVATE
  GROUP
}
